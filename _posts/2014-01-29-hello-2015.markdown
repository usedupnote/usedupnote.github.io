---
layout:     post
title:      "\[ 다이나믹 프로그래밍 (dynamic programming) \]"
date:       2022-12-02 19:52:00
author:     "Usedupnote"
header-style: text
catalog: true
tags:
    - program
    - opinion
    - study
---

> “ 다이나믹 프로그래밍 (dynamic programming) ”


## 다이나믹 프로그래밍 (== 동적 프로그래밍)

# 하게 된 계기
 이 부분에 대해 공부하게된 계기는 **[1로 만들기](https://www.acmicpc.net/problem/1463)** 를 플면서 필요한 부분이었기 때문이다.
 처음에 문제에 접근할 때, 그리디 알고리즘로 생각을 했지만 그러기에는 문제에서 제공하는 것과 같은 반례가 존재함을 인지했다.
 이에 문제에 대한 해결책을 찾아보는 중 정리하게 된 내용이다.
 
---
# 다이나믹 프로그래밍이란?
 다이나믹 프로그래밍의 핵심 가치는 중복되는 연산을 줄임으로써, 효율적으로 값을 구할 수 있도록 하는 것에 있다.
 계산 과정에서 메모리를 적절하게 사용하는 대신 시간을 극단적으로 줄여줄 수 있는 시간 최적화를 위한 방법 중 하나이며, 특정 범위까지의 값을 구하기 위해서 그것과 다른 범위까지의 값을 이용하여 효율적으로 값을 구하는 알고리즘 설계 기법이다.
 
 * 다이나믹 프로그래밍의 2가지 방식
 	* 탑 다운
 	* 보텀 업

---
# 탑 다운
---
# 프로 그래밍


—— 2022.12.02.
---
참조한 곳
* [이것이 코딩 테스트다(서적)](https://product.kyobobook.co.kr/detail/S000001810273?LINK=NVB&NaPm=ct%3Dlb6hife8%7Cci%3D20a7628b6ca4aa925c0cf0960d88d82371edcb2e%7Ctr%3Dboksl1%7Csn%3D5342564%7Chk%3D0a8b90ea1c693b88c0ab051e98b22a423d852de0)
* [동적 계획법(나무위키)](https://namu.wiki/w/%EB%8F%99%EC%A0%81%20%EA%B3%84%ED%9A%8D%EB%B2%95)
* [Flash(블로그)]([https://namu.wiki/w/%EB%8F%99%EC%A0%81%20%EA%B3%84%ED%9A%8D%EB%B2%95](https://velog.io/@dlwns97/%EB%8F%99%EC%A0%81-%EA%B3%84%ED%9A%8D%EB%B2%95Dynamic-Programming))

---

작성자에 대한 추가적인 사항은?
* 기술
	* [포트폴리오 블로그](https://usedupnote.github.io/)
	* [백준프로필](https://www.acmicpc.net/user/usedupnote)
	* [solved.ac 프로필](https://solved.ac/profile/usedupnote)
	* [인스타그램(기술)](https://www.instagram.com/idea.memory/)
* 일상
	* [인스타그램(일상)](https://www.instagram.com/i_m_meong/)
